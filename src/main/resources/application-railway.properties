# Railway Database Configuration
# Database URL is handled by DatabaseConfig.java to convert Railway's format

# JPA Configuration
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=false

# Disable H2 console in production
spring.h2.console.enabled=false

# Server Configuration
server.port=${PORT:8080}
server.servlet.context-path=/

# Logging Configuration
logging.level.root=INFO
logging.level.com.nflpickem=INFO
logging.level.org.springframework.web=INFO
logging.level.org.hibernate.SQL=WARN
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=WARN

# Security Configuration - Use environment variables
spring.security.user.name=${ADMIN_USERNAME:admin}
spring.security.user.password=${ADMIN_PASSWORD}

# CORS Configuration for Railway
spring.web.cors.allowed-origins=*
spring.web.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.web.cors.allowed-headers=*

# Actuator for health checks - Allow public access
management.endpoints.web.exposure.include=health,info
management.endpoint.health.show-details=always
management.endpoints.web.base-path=/actuator

# Disable problematic metrics in containerized environment
management.metrics.enable.processor=false
management.metrics.enable.system=false
management.metrics.enable.jvm=false

# Startup Configuration
spring.main.allow-bean-definition-overriding=true
spring.jpa.defer-datasource-initialization=true

# Exclude problematic auto-configurations
spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.security.reactive.ReactiveSecurityAutoConfiguration,org.springframework.boot.actuate.autoconfigure.metrics.SystemMetricsAutoConfiguration
